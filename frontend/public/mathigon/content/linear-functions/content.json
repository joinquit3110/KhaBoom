{
  "sections": [
    {
      "section": "graphs",
      "sectionStatus": "dev",
      "color": "\"#F15E19\"",
      "level": "Foundations",
      "content": "# Linear Functions\n\n## Input, Output and Graphs\n\n\nTODO"
    },
    {
      "section": "slope-intercept",
      "sectionStatus": "dev",
      "id": "slope",
      "goals": "make-point slide-point",
      "content": "## Slope and Intercept\n\n\n::: .theorem\n__Common Core Standard 8.EE.6__<br>\nUse similar triangles to explain why the slope _m_ is the same between any two\ndistinct points on a non-vertical line in the coordinate plane; derive the\nequation `y=mx` for a line through the origin and the equation `y=mx+b` for a\nline intercepting the vertical axis at _b_.\n:::\n\nHere you can see a [coordinate system](gloss:coordinate-system), with a straight\nline that goes through its [origin](gloss:coordinate-system-origin). To get\nstarted, pick a point anywhere on the line.\n\n::: column(width=360 parent=\"padded-thin\")\n\n    x-coordinate-system.c-system(width=360 height=440 x-axis=\"-5,5,1\" y-axis=\"-6,6,1\" crosshairs=\"no\" padding=5)\n    x-gesture(target=\"#slope x-coordinate-system\" offset=\"63,-107\")\n\n::: column.grow\n\n{.reveal(when=\"make-point\")} We can draw a right-angled triangle between this\npoint and the origin of the coordinate system.\n\n{.reveal(when=\"make-point\" delay=1500)} Try sliding the point along the line:\nnotice how different points form differently sized triangles, but they are all\n[[similar|congruent|equilateral]]. _{.lgrey.reveal(when=\"blank-0\")} The best way\nto see this is to look at the two angles along the x-axis. They are always the\nsame size, so by the [AA-condition](gloss:triangle-aa) the triangles must all\nbe similar._\n\n{.reveal(when=\"blank-0\" delay=1500)} Now we can use one of the results we know\nabout similar triangles: the ratio of two of the sides is always constant. Move\nthe point again, and watch what happens:\n\n{.reveal.text-center(when=\"blank-0\" delay=3000)}\n`pill(var(\"p.y\"),\"green\",\"dy\")/pill(var(\"p.x\"),\"blue\",\"dx\") = var(\"p.y/p.x || '???'\")`\n\n{.reveal(when=\"slide-point\")} But the opposite is also true: any point (_x_, _y_)\nthat satisfies this equation must lie somewhere on the line. Therefore we now\nhave an “equation” for the line:\n\n{.text-center.reveal(when=\"slide-point\" delay=1000)} `pill(y,\"green\",\"dy\") / pill(x,\"blue\",\"dx\") = 1.5`\n\n{.r.text-center.reveal(when=\"slide-point\" delay=2000)}\n`⇔ pill(y,\"green\",\"dy\") = 1.5 pill(x,\"blue\",\"dx\")`\n[Continue](btn:next)\n\n:::"
    },
    {
      "id": "questions-1",
      "content": "It turns out that _every line_ that goes through the origin of a coordinate\nsystem has an equation of the form `y = mx`, where _m_ is called the\n[__slope__](gloss:line-slope).\n\nIf you’re given a line, you can find the corresponding value of _m_ by picking\nany point that lies on the line and simply dividing its _y_ and _x_ value. Here\nare a few examples:\n\n::: column(width=230 parent=\"padded-thin\")\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} _m_ = [[0.5]]\n\n::: column(width=230)\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} _m_ = [[3]]\n\n::: column(width=230)\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} _m_ = [[-1]]\n\n:::"
    },
    {
      "id": "intercept",
      "content": "But what about lines that _don’t_ go through the origin of the coordinate\nsystem? In that case we need one more component: we can take the line with the\nsame slope that goes through the origin, and shift it along the _y_-axis by\nadding or subtracting a number:\n\n    svg(style=\"width: 0; height: 0; position: absolute;\"): defs\n      marker#blue-arrow(refX=2 refY=2 markerWidth=4 markerHeight=4 orient=\"auto\")\n        path(d=\"M 0 0 L 4 2 L 0 4 z\" fill=\"#fd8c00\")\n      marker#blue-circle(refX=\"2\" refY=\"2\" markerWidth=\"4\" markerHeight=\"4\" orient=\"auto\")\n        circle( cx=2 cy=2 r=1.5 fill=\"#fd8c00\")\n\n    x-coordinate-system(width=400 height=320 x-axis=\"-8,8,1\" y-axis=\"-6,6,1\" crosshairs=\"no\" padding=5)\n    x-gesture(target=\"#intercept x-var\" slide=\"100,0\")\n\n{.text-center} `y = 2/3 x` ${sign(a)} ${abs(a)}{a|0|-4,4,1}\n\n{.reveal(when=\"var-0\")} As you can see above, the number added to the value of\n_y_ is the same as the distance between the origin of the coordinate system, and\nthe point where the line crosses the [[_y_-axis|_x_-axis]]."
    },
    {
      "id": "equation",
      "content": "We now have an equation for _any_ (non-vertical) line in the coordinate plane:\n\n{.text-center} `y = class(m,\"b orange\") x + class(b,\"b cyan\")`,\n\n{.r} where _{.b.orange}m_ and _{.b.cyan}b_ are two numbers we have to fill in.\nAs you saw before, _{.b.orange}m_ is the __{.orange}slope__ of the line, and\n_{.b.cyan}b_ is the __{.cyan}*y*-axis intercept__.\n[Continue](btn:next)"
    },
    {
      "id": "equation-1",
      "content": "::: column(width=360 parent=\"padded-thin\")\n\n    x-coordinate-system(width=360 height=360 x-axis=\"-5,5,1\" y-axis=\"-4,6,1\" no-crosshairs padding=5)\n\n::: column.grow\n\nIf you’re given any line, like the one on the left, you can find the value of\n_{.b.cyan}b_ by looking at the point where the line crosses the _y_-axis. In\nthis example, _{.b.cyan}b_ = [[2]].\n\n{.reveal(when=\"blank-0\")} Similarly, you can find the slope _{.b.orange}m_ by\ndrawing any triangle below the line, and dividing its height and base. In this\nexample, the slope is _{.b.orange}m_ = [[0.75]].\n\n{.reveal(when=\"blank-1\")} In other words, the equation of this line is\n\n{.text-center.reveal(when=\"blank-1\")} `y=` _{x-equation(solution=\"3/4 x+2\")}_\n\n:::"
    },
    {
      "id": "questions-2",
      "content": "Here are a few more exercises. Can you find the slope and _y_-intercept in\neach case, and write down the equation of the line?\n\n::: column(width=230 parent=\"padded-thin\")\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} `y=` _{x-equation(solution=\"3/2 x-2\")}_\n\n::: column(width=230)\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} `y=` _{x-equation(solution=\"2x+1\")}_\n\n::: column(width=230)\n\n    x-coordinate-system(width=230 height=180 x-axis=\"-5,5,1\" y-axis=\"-4,4,1\" labels=\"no\" padding=5 crosshair-grid=1)\n\n{.text-center} `y=` _{x-equation(solution=\"-1/2 x+3\")}_\n\n:::"
    },
    {
      "section": "parallel-perpendicular",
      "sectionStatus": "dev",
      "content": "## Parallel and Perpendicular Lines\n\n\nTODO"
    },
    {
      "section": "systems",
      "sectionStatus": "dev",
      "content": "## Systems of Equations\n\n\nTODO"
    }
  ],
  "title": "Linear Functions"
}